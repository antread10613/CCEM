LIBNAME DATA '/u04/gcs/staging/';
LIBNAME SAVEDSAS '/u05/gcs/staging/savedsas';
 
%LET CAMPAIGN_KEY = CCEM20241017; 
%LET CAMPAIGN_DT = 20241017; 
%LET CMPGN_MON = SEP; 
%LET CMPGN_YEAR = 2024; 
%LET MATRIX_MON = 20241007/*Want to use the same date as DM*/; 
%LET BEB_DATE = 1123;	/* update before live pull */ 
%LET CC_UNDERWRITING_FILE_DT = 20241008; /*Want to use the same date as DM*/;
 
TITLE ' ';
TITLE 'BWP';
PROC SQL;
	SELECT COUNT(*) FROM SAVEDSAS.PCPQ_CC_FINAL_BWP_&CC_UNDERWRITING_FILE_DT.; /* CC UW file */
QUIT ;
TITLE ' ';
TITLE 'BWY';
PROC SQL;
	SELECT COUNT(*) FROM SAVEDSAS.PCPQ_CC_FINAL_BWY_&CC_UNDERWRITING_FILE_DT.; /* CC UW file */
QUIT ;

TITLE ' ';
PROC SORT DATA = DATA.ACCOUNT
	(KEEP = ACCT_KEY APPL_KEY ACCT_ID ADDRESS_ID INDIV_ID SOLCT_ACCT_TYP CUR_BAL_ACTUAL A_TD_STAT_CD A_ME_STAT_CD
	ACCT_TYP ACCT_TERM_TYP_CD ACCT_ACT_MO A_TD_ME_NET_VOL_AM BULK_PURCH WILLOW_ACCTS ACCT_SYS_CD A_TD_CUST_ID 
	CCCS_YN FRAUD_YN Wisconsin_128_i ACTIVE_COMPLAINT_YN EXCL_ADD_LOAN_MOD_FLAG ALERT_ATTRIBUTE_YN DAYS_SINCE_LOAN BP_TRACK_ID_VOLTD VOL_TYP) 
	OUT = ACCOUNT;
	BY ACCT_KEY;
RUN;

PROC SORT DATA = ACCOUNT (KEEP=INDIV_ID DAYS_SINCE_LOAN EXCL_ADD_LOAN_MOD_FLAG ACTIVE_COMPLAINT_YN CCCS_YN ALERT_ATTRIBUTE_YN wisconsin_128_i ) NODUPKEY OUT = ACCOUNT_INDIV;
	WHERE EXCL_ADD_LOAN_MOD_FLAG='Y' OR
		ACTIVE_COMPLAINT_YN='Y' OR
		ALERT_ATTRIBUTE_YN='Y' OR
		CCCS_YN='Y';
	BY INDIV_ID;
RUN;

/* CC APPLICATION AND BOOKED DATA */
DATA OMF_CARD_APPS;
SET DATA.OMF_CARD_APPS (KEEP=INDIV_ID APPLICATION_DATE APPLICATION_STATUS DECISION) ; 
WHERE APPLICATION_STATUS IN ('processing', 'manual check') OR 
	  DECISION IN ('approved', 'rejected',' ','declined','.');
RUN; 

DATA OMF_CARD_APPS;

SET OMF_CARD_APPS; 
FORMAT CARD_SUPP $50. CC_APP_DATE YYMMDD10.; 
CC_APP_DATE = DATEPART(APPLICATION_DATE); 

IF DECISION = 'approved' THEN CARD_SUPP = 'ACTIVE OMF CREDIT CARD';
ELSE IF DECISION in ('declined',' ','rejected','.') AND CC_APP_DATE > (TODAY()-91) THEN CARD_SUPP = 'DECLINED OMF CREDIT CARD APP';
ELSE IF APPLICATION_STATUS IN ('processing', 'manual check') AND CC_APP_DATE > (TODAY()-181) THEN CARD_SUPP = 'PENDING OMF CREDIT CARD APP';
ELSE CARD_SUPP = ''; 
RUN; 
PROC SORT DATA=OMF_CARD_APPS NODUPKEY; BY INDIV_ID; 
WHERE SUBSTR(CARD_SUPP,1,1) > ''; 
RUN; 

PROC SORT DATA = DATA.APPLICATION (KEEP = APPL_KEY ACCT_KEY ADDRESS_ID INDIV_ID IAPS_SRC_CD) 
	OUT = APPLICATION;
	BY ACCT_KEY APPL_KEY;
RUN;

PROC SORT DATA = APPLICATION (KEEP = ACCT_KEY IAPS_SRC_CD) NODUPKEY OUT = APPLICATION_ACCT;
WHERE IAPS_SRC_CD IN ('31429','31461','31469','31458','31459','31460','31462',
'31463','31465','31474','31475','31486','31497', '31499') AND ACCT_KEY > 0;
BY ACCT_KEY;
RUN;

DATA APPLICATION_ACCT;
SET APPLICATION_ACCT;
DEALERTRK_FLG = 'Y'; 
RUN; 

PROC SORT DATA = DATA.CUSTOMER (KEEP = INDIV_ID LOAN_MOD_ACTIVE_FLAG) NODUPKEY OUT = LOAN_MOD_INDIV;
	WHERE LOAN_MOD_ACTIVE_FLAG='Y';
	BY INDIV_ID;
RUN;

/* BORROWER ASSISTANCE and 4+ DEFERMENTS in 2020 */
PROC SQL;
CREATE TABLE BA_ACCT AS
SELECT 
A.BA_FLAG,
B.INDIV_ID
	FROM SAVEDSAS.MKTG_ADHOC_SUPPRESSION A
		LEFT OUTER JOIN DATA.ACCOUNT B
			ON A.ACCT_KEY = B.ACCT_KEY
	WHERE A.BA_FLAG = 'Y' ;
QUIT;

PROC SORT DATA=BA_ACCT NODUPKEY OUT = BORROWER_INDIV; BY INDIV_ID;
WHERE INDIV_ID > 0; RUN;

PROC SORT DATA=DATA.BEB_ATTRIBUTE_&BEB_DATE. 
	(KEEP=INDIV_ID BK_FILING_YN)
NODUPKEY OUT = BEB_TABLE_INDIV;
WHERE BK_FILING_YN = 'Y';
BY INDIV_ID;
RUN;

PROC SORT DATA=DATA.INDIVIDUAL 
	(KEEP=INDIV_ID RANDOM_15 DAYS_SINCE_LAST_APP INVALID_ZIP_FLG)
NODUPKEY OUT = RANDOM_INDIV;
BY INDIV_ID;
RUN;

/* Kofax optouts */
PROC SORT DATA=DATA.MDM_IND_AUTHORIZATION (KEEP=INDIV_ID AUTH_CD CUR_AUTH_FLG) OUT=AUTHORIZATION NODUPKEY;
BY INDIV_ID; 
WHERE AUTH_CD = 'KOFAX_OPT_OUT' AND CUR_AUTH_FLG = 'N' ;
RUN; 

/*EMAIL DNS*/

DATA AUTHORIZATION;
SET DATA.MDM_IND_AUTHORIZATION (KEEP = INDIV_ID CUST_EMAIL_ID AUTH_CD CUR_AUTH_FLG);
IF CUR_AUTH_FLG = 'N' AND AUTH_CD IN ('DNS','EM_SOLCT','DNS_BPOL_NOT_16','DNS_EMAIL') 
THEN OUTPUT;
RUN;

DATA AUTHORIZATION_2 EM_SOLCT_FL;
SET AUTHORIZATION;
IF AUTH_CD = 'EM_SOLCT' THEN OUTPUT EM_SOLCT_FL;
ELSE OUTPUT AUTHORIZATION_2;
RUN;

PROC SORT DATA = AUTHORIZATION_2 OUT = AUTHORIZATION_IND NODUPKEY;
BY INDIV_ID;
RUN;

PROC SORT DATA = AUTHORIZATION_2 NODUPKEY OUT = AUTHORIZATION_EMAIL 
(RENAME = (AUTH_CD = AUTH_CD_EMAIL));
BY CUST_EMAIL_ID;
RUN;

DATA EMAIL_AUTHORIZATION (DROP = CUR_AUTH_FLG);
SET DATA.MDM_EMAIL_AUTHORIZATION (KEEP = EMAIL_ID AUTH_CD CUR_AUTH_FLG);
CUST_EMAIL_ID = EMAIL_ID;
RENAME AUTH_CD = EAUTH_CD;
IF CUR_AUTH_FLG = 'N' AND 
(AUTH_CD = 'SAPIENT' OR SUBSTR(AUTH_CD,1,2) = 'UN' OR AUTH_CD = 'DNS_EMAIL') THEN OUTPUT;
RUN;

PROC SORT DATA = EMAIL_AUTHORIZATION NODUPKEY OUT = EMAIL_AUTHORIZATION_EMAIL
(RENAME = (EAUTH_CD  = EAUTH_CD_EMAIL));
BY CUST_EMAIL_ID;
RUN;

/*ZETA INVALID/UNSUB AND DEADWOOD FLAGS*/

DATA DEADWOOD; 
SET DATA.ZETA_DEADWOOD_SUPP (KEEP = EMAIL_ID DATESUBSCRIBED LASTOPENED LASTCLICKED VALIDSTATUS DAYS_SINCE_SUBSCRIBE DAYS_SINCE_OPEN 
DAYS_SINCE_CLICK UNSUBDATE DAYS_SINCE_LASTSENT);
IF DAYS_SINCE_OPEN > 270 OR DAYS_SINCE_OPEN = . THEN OPENED_DEADWOOD_270 = 'Y'; ELSE OPENED_DEADWOOD_270 = 'N';
IF DAYS_SINCE_CLICK > 270 OR DAYS_SINCE_CLICK = . THEN CLICKED_DEADWOOD_270 = 'Y'; ELSE CLICKED_DEADWOOD_270 = 'N';
IF DAYS_SINCE_OPEN > 180 OR DAYS_SINCE_OPEN = . THEN OPENED_DEADWOOD_180 = 'Y'; ELSE OPENED_DEADWOOD_180 = 'N';
IF DAYS_SINCE_CLICK > 180 OR DAYS_SINCE_CLICK = . THEN CLICKED_DEADWOOD_180 = 'Y'; ELSE CLICKED_DEADWOOD_180 = 'N';
IF DAYS_SINCE_OPEN = . AND DAYS_SINCE_CLICK = . THEN NO_RESPONSE_DEADWOOD = 'Y'; ELSE NO_RESPONSE_DEADWOOD = 'N';
IF ((OPENED_DEADWOOD_270 = 'Y' AND CLICKED_DEADWOOD_270 = 'Y') OR NO_RESPONSE_DEADWOOD = 'Y') AND (DAYS_SINCE_LASTSENT <= 360 AND DAYS_SINCE_LASTSENT NE .) THEN ALL_DEADWOOD_EXCL_EMAIL = 'Y';
IF ((OPENED_DEADWOOD_180 = 'Y' AND CLICKED_DEADWOOD_180 = 'Y') OR NO_RESPONSE_DEADWOOD = 'Y') AND (DAYS_SINCE_LASTSENT <= 360 AND DAYS_SINCE_LASTSENT NE .) THEN GMAIL_DEADWOOD_EXCL_EMAIL = 'Y';
IF ((OPENED_DEADWOOD_180 = 'Y' AND CLICKED_DEADWOOD_180 = 'Y') OR NO_RESPONSE_DEADWOOD = 'Y') AND (DAYS_SINCE_LASTSENT <= 360 AND DAYS_SINCE_LASTSENT NE .) THEN YAHOO_DEADWOOD_EXCL_EMAIL = 'Y';
IF (DAYS_SINCE_OPEN > 365 OR DAYS_SINCE_OPEN = .) AND (DAYS_SINCE_CLICK > 365 OR DAYS_SINCE_CLICK = .) THEN OPEN_365_DEADWOOD = 'Y';
RUN;

PROC SORT DATA = DEADWOOD OUT = COMB_DEADWOOD_EXCL_EMAIL (KEEP=EMAIL_ID ALL_DEADWOOD_EXCL_EMAIL GMAIL_DEADWOOD_EXCL_EMAIL YAHOO_DEADWOOD_EXCL_EMAIL OPEN_365_DEADWOOD);
BY EMAIL_ID;
WHERE 	ALL_DEADWOOD_EXCL_EMAIL = 'Y' OR
		GMAIL_DEADWOOD_EXCL_EMAIL = 'Y' OR
		YAHOO_DEADWOOD_EXCL_EMAIL = 'Y' OR
		OPEN_365_DEADWOOD = 'Y';
RUN;

PROC SORT DATA = DEADWOOD OUT = ZETA_INVALID_UNSUB_EMAIL (KEEP=EMAIL_ID VALIDSTATUS UNSUBDATE);
BY EMAIL_ID;
WHERE 	VALIDSTATUS = '0' OR
		UNSUBDATE NE .;
RUN;

DATA ZETA_INVALID_UNSUB_EMAIL_2;
SET ZETA_INVALID_UNSUB_EMAIL;
RENAME VALIDSTATUS = VALIDSTATUS_ZETA;
RUN;


DATA LOAN_APPLICATION;
SET DATA.APPLICATION (KEEP = EMAIL_ID EMAIL_SOLCT_FL APPL_KEY ACCT_KEY ADDRESS_ID INDIV_ID NEW_APPS_LAST_60_YN_PC
APP_SUPP_RSN APPL_ENTRY_DT CB_MLA_ELG_CD APPL_STAT_CD RSK_LVL IAPS_SRC_CD CUST_EMAIL_ID);
FORMAT APPL_ENTRY_DT_NEW DATE9.; 
APPL_ENTRY_DT_NEW = DATEPART(APPL_ENTRY_DT);
IF (APPL_STAT_CD='T' AND APPL_ENTRY_DT_NEW>=TODAY()-30) THEN REC_APPR_NOT_ACC='Y';
ELSE IF (APPL_STAT_CD NOT IN ('T','B') AND APPL_ENTRY_DT_NEW>=TODAY()-180) THEN REC_APPR_NOT_ACC='Y';
ELSE REC_APPR_NOT_ACC='N';
RUN;

PROC SORT DATA = LOAN_APPLICATION (KEEP = EMAIL_ID EMAIL_SOLCT_FL INDIV_ID APP_SUPP_RSN NEW_APPS_LAST_60_YN_PC REC_APPR_NOT_ACC) NODUPKEY OUT = LOAN_APPLICATION_INDIV 
	(RENAME = (APP_SUPP_RSN = APP_SUPP_RSN_INDIV NEW_APPS_LAST_60_YN_PC=NEW_APPS_LAST_60_YN_PC_INDIV
REC_APPR_NOT_ACC=REC_APPR_NOT_ACC_INDIV));
WHERE APP_SUPP_RSN IN ('PENDING') OR
	  REC_APPR_NOT_ACC='Y' OR
	  NEW_APPS_LAST_60_YN_PC='Y';
BY INDIV_ID;
RUN;


PROC SORT DATA = LOAN_APPLICATION (KEEP = EMAIL_ID EMAIL_SOLCT_FL ADDRESS_ID APP_SUPP_RSN NEW_APPS_LAST_60_YN_PC REC_APPR_NOT_ACC) NODUPKEY OUT = LOAN_APPLICATION_ADDR 
	(RENAME = (APP_SUPP_RSN = APP_SUPP_RSN_ADDR NEW_APPS_LAST_60_YN_PC=NEW_APPS_LAST_60_YN_PC_ADDR REC_APPR_NOT_ACC=REC_APPR_NOT_ACC_ADDR));
WHERE APP_SUPP_RSN IN ('PENDING') OR
	  REC_APPR_NOT_ACC='Y' OR
	  NEW_APPS_LAST_60_YN_PC='Y';
BY ADDRESS_ID;
RUN;

/*APP DNS*/

PROC SORT DATA = LOAN_APPLICATION
(KEEP = EMAIL_ID EMAIL_SOLCT_FL)
NODUPKEY
OUT = APPLICATION_APP_EMAIL 
(RENAME = (EMAIL_SOLCT_FL = EMAIL_SOLCT_FL_EMAIL EMAIL_ID = CUST_EMAIL_ID ) );
WHERE EMAIL_SOLCT_FL = 'N';
BY EMAIL_ID;
RUN;


/* output data should be available */
DATA &CAMPAIGN_KEY._OUTPUT_AUDIT ;
SET DATA.&CAMPAIGN_KEY._OUTPUT_AUDIT; 
WHERE SEED_FLG = 'N';
RUN;  
proc sort data= &CAMPAIGN_KEY._OUTPUT_AUDIT  NODUPKEY OUT=&CAMPAIGN_KEY._OUTPUT_AUDIT_ND;
BY ACCT_KEY;
run;
proc freq data=&CAMPAIGN_KEY._OUTPUT_AUDIT_nd ; table cell_key;run;

DATA STACKED1;
MERGE 	ACCOUNT (IN=B drop=INDIV_ID ADDRESS_ID ACTIVE_COMPLAINT_YN CCCS_YN EXCL_ADD_LOAN_MOD_FLAG ALERT_ATTRIBUTE_YN
	  			 A_TD_STAT_CD A_ME_STAT_CD)
		APPLICATION_ACCT (IN=D KEEP=ACCT_KEY DEALERTRK_FLG IAPS_SRC_CD)
			&CAMPAIGN_KEY._OUTPUT_AUDIT_ND (IN=A);
BY ACCT_KEY;
IF A;
RUN;

PROC SORT DATA = STACKED1;
	BY INDIV_ID;
RUN;

DATA STACKED2;
MERGE	OMF_CARD_APPS (IN=B KEEP=INDIV_ID CARD_SUPP)
		ACCOUNT_INDIV (IN=C DROP=DAYS_SINCE_LOAN)
		SAVEDSAS.CMPGN_AUDIT_ITA_IND (IN=E KEEP=INDIV_ID ACTIVE_SPECTRUM_YN ATTORNEY_REP_I_IND /*BOOKED_LAST_90_DAYS_YN*/ BANKRUPT_YN /*WTD_PC_YN*/
		CHARGE_OFF_YN CUST_OPEN_RELN_CT DECEASED_YN DISPUTED_BALANCE_YN EMPL_IND EQF_CO_FLG EXP_CO_FLG FORECLOSURE_YN_IND CUSTOMER_TYP_ACTUAL
		JUDGMENT_LITIGATION_YN_IND LOAN_MOD_FLAG_IND NBR_ACTIVE_ACCT NBR_RENEWALS_12M ONUS_ALERT_YN CEASE_DESIST_I_IND BULK_ILOAN_ACCT_YN_IND
		PC_FACT_ACT_YN_IND PRISON_IND SCRA_YN_IND SDA_FLAG_IND MKTG_DNS_YN JUDGEMENT_YN_IND TOT_CO_YN TREASURY_ADDR_IND /*PC_HOLDOUT_FL*/
		DNS_BPOL_NOT_16_IND DNS_IND OM_DNM_IND INVALID_NAME_YN BLANK_CITY_FLG BLANK_ADDR_FLG ADV_RCPT_CD_IND DELIVERABILITY_YN)
		RANDOM_INDIV (IN=D)
		BEB_TABLE_INDIV (IN=F) 
		LOAN_MOD_INDIV (IN=G)
		BORROWER_INDIV (IN=H)
		AUTHORIZATION_IND (IN=N KEEP= INDIV_ID AUTH_CD)
		STACKED1 (IN=A);
BY INDIV_ID;
IF A;
RUN;

PROC SORT DATA = STACKED2;
	BY ADDRESS_ID;
RUN;

DATA STACKED3;
MERGE	SAVEDSAS.CMPGN_AUDIT_ITA_ADDR (IN=B KEEP=ADDRESS_ID CHARGE_OFF_YN_ADDR 
		EQF_CO_FLG_ADDR  EXP_CO_FLG_ADDR
        PRISON_ADDR TOT_CO_YN_ADDR TREASURY_ADDR_ADDR)
	/*	LOAN_INDIVIDUAL_ADDR (IN=C KEEP=ADDRESS_ID WTD_PC_YN_ADDR BOOKED_LAST_90_DAYS_YN_ADDR IND_BOOKED_LAST_100_OH_ADDR 
	                          IND_BOOKED_LAST_90_SD_ADDR)
		LOAN_APPLICATION_ADDR (IN=D KEEP= ADDRESS_ID APP_SUPP_RSN_ADDR NEW_APPS_LAST_60_YN_PC_ADDR REC_APPR_NOT_ACC_ADDR)*/
		STACKED2 (IN=A);
BY ADDRESS_ID;
IF A;
RUN;

DATA EMAIL_ADDRESS_SUPPRESSIONS (DROP= INDIV_ID /*CUR_AUTH_FLG*/);
SET AUTHORIZATION_EMAIL
	APPLICATION_APP_EMAIL
	EMAIL_AUTHORIZATION_EMAIL (DROP=EMAIL_ID);
RUN;

PROC SORT DATA = EMAIL_ADDRESS_SUPPRESSIONS NODUPKEY OUT= EMAIL_ADDRESS_SUPPRESSIONS_2
(RENAME = (CUST_EMAIL_ID = EMAIL_ID));
BY CUST_EMAIL_ID; 
RUN;

PROC SORT DATA = STACKED3 OUT= STACKED_3B;
BY EMAIL_ID; 
RUN;


PROC SORT DATA = COMB_DEADWOOD_EXCL_EMAIL OUT= COMB_DEADWOOD_EXCL_EMAIL_2;
BY EMAIL_ID; 
RUN;


DATA STACKED4 ;
MERGE EMAIL_ADDRESS_SUPPRESSIONS_2 (IN=B)
	  ZETA_INVALID_UNSUB_EMAIL_2 (IN=C)
	  COMB_DEADWOOD_EXCL_EMAIL_2 (IN=D KEEP= EMAIL_ID ALL_DEADWOOD_EXCL_EMAIL GMAIL_DEADWOOD_EXCL_EMAIL YAHOO_DEADWOOD_EXCL_EMAIL
							         OPEN_365_DEADWOOD)
	  STACKED_3B(IN=A);
BY EMAIL_ID;
IF A;
RUN;


/*CHECKING FOR DUPLICATES*/
PROC SQL;
CREATE TABLE TOTAL_NAMES AS
SELECT 	
CAMPAIGN_KEY,
COUNT(*) AS TOTAL_MAIL_QTY,
COUNT(DISTINCT A.INDIV_ID) AS DISTINCT_INDIV_ID,
COUNT(DISTINCT A.ACCT_KEY) AS DISTINCT_ACCT_KEY,
COUNT(DISTINCT A.EMAIL_ID) AS DISTINCT_EMAIL_ID,
COUNT(DISTINCT A.CONTACT_URN) AS DISTINCT_CONTACT_URN
FROM STACKED4 A
WHERE SEED_FLG = 'N' 
GROUP BY CAMPAIGN_KEY;
QUIT;

PROC SORT DATA = TOTAL_NAMES NODUPKEY OUT= TOTAL_NAMES_2;
BY DISTINCT_INDIV_ID; 
RUN;

DATA TOTAL_NAMES_2;
SET TOTAL_NAMES_2;
IF DISTINCT_INDIV_ID = TOTAL_MAIL_QTY 
	THEN DISTINCT_INDIV_ID_CHECK = 'OK ';
	ELSE DISTINCT_INDIV_ID_CHECK = 'BAD';
IF DISTINCT_ACCT_KEY = TOTAL_MAIL_QTY 
	THEN DISTINCT_ACCT_KEY_CHECK = 'OK ';
	ELSE DISTINCT_ACCT_KEY_CHECK = 'BAD';
IF DISTINCT_EMAIL_ID = TOTAL_MAIL_QTY 
	THEN DISTINCT_EMAIL_ID_CHECK = 'OK ';
	ELSE DISTINCT_EMAIL_ID_CHECK = 'BAD';
IF DISTINCT_CONTACT_URN = TOTAL_MAIL_QTY 
	THEN DISTINCT_CONTACT_URN_CHECK = 'OK ';
	ELSE DISTINCT_CONTACT_URN_CHECK = 'BAD';
FORMAT DISTINCT_CHECK $50.;
 IF DISTINCT_INDIV_ID_CHECK = 'BAD' THEN DISTINCT_CHECK = 'FAILED - DISTINCT_INDIV_ID';
ELSE IF DISTINCT_ACCT_KEY_CHECK = 'BAD' THEN DISTINCT_CHECK = 'FAILED - DISTINCT_ACCT_KEY';
ELSE IF DISTINCT_EMAIL_ID_CHECK = 'BAD' THEN DISTINCT_CHECK = 'FAILED - DISTINCT_EMAIL_ID';
ELSE IF DISTINCT_CONTACT_URN_CHECK = 'BAD' THEN DISTINCT_CHECK = 'FAILED - DISTINCT_CONTACT_URN'; /*COMMENT OUT DURING TESTING*/
ELSE DISTINCT_CHECK = 'PASSED';
RUN;

/*MAKING SURE ALL STATES ARE RECEIVING MAIL FROM EACH BUREAU*/
PROC SQL;
CREATE TABLE STATE_CT_SUMMARY AS
SELECT 	
CAMPAIGN_KEY,
COUNT(DISTINCT A.STATE_PROVINCE_CD) AS STATE_CT
FROM STACKED4 A
WHERE SEED_FLG = 'N' 
GROUP BY 1;
QUIT;
/*update 06/23*/
DATA STATE_CT_SUMMARY;
SET STATE_CT_SUMMARY;
/* updated state count to 36*/
IF STATE_CT = 36 THEN STATE_CT_CHECK = 'PASSED'; ELSE STATE_CT_CHECK = 'FAILED';
RUN;

DATA STACKED4A;
SET STACKED4;
BRNCH_NBR_1 = BRNCH_NBR*1;
RUN;

PROC SQL;
CREATE TABLE STACKED4B AS
SELECT 
	A.*,
	C.BIF_BRANCH_GRP,
	C.BIF_LVL_03_EMP_NM,
	C.BIF_LVL_01_EMP_NM,
	C.BRANCH_CORP_NBR,
	C.BIF_CAT_CD,
	B.OFFER_AMT AS MATRIX_OFFER_AMT,
	B.APR AS MATRIX_APR,
	B.PMT AS MATRIX_PMT,
	B.TERM AS MATRIX_TERM,
	STATE_CT_SUMMARY.STATE_CT_CHECK,
	TOTAL_NAMES.TOTAL_MAIL_QTY,
	TOTAL_NAMES.DISTINCT_CHECK
FROM STACKED4A A 
LEFT OUTER JOIN DATA.BRANCH C 
	ON A.BRNCH_NBR_1 = C.BRNCH_NBR
LEFT OUTER JOIN SAVEDSAS.SLFS_ITA_MATRIX_&MATRIX_MON./*aS.SLFS_ITA_MATRIX_&MATRIX_MON.*/ B
	ON A.BIF_ST_STATE_CD = B.STATE ANd 	A.OFFER_TYP = B.OFFER_TYP AND
 	A.CUST_TYP_CD = B.CUSTOMER_TYP AND
	A.PRODUCT = B.PRODUCT
LEFT JOIN STATE_CT_SUMMARY AS STATE_CT_SUMMARY
		ON A.CAMPAIGN_KEY = STATE_CT_SUMMARY.CAMPAIGN_KEY
LEFT JOIN TOTAL_NAMES_2 AS TOTAL_NAMES
		ON A.CAMPAIGN_KEY = TOTAL_NAMES.CAMPAIGN_KEY;
QUIT;

PROC SQL;       
CREATE TABLE FRESH_ADDRESS_INVALID_EMAILS AS          
SELECT A.*,           
CASE 
     WHEN EMAIL_ID IN (SELECT EMAIL_ID FROM SAVEDSAS.FRESH_ADDRESS_INVALID_EMAILS) THEN 'Y'
     ELSE 'N'
     END AS FRESH_ADDRESS_INVALID_FLG 
FROM STACKED4B A;
QUIT;


DATA STACKED4_FINAL;
SET FRESH_ADDRESS_INVALID_EMAILS;
RUN;

PROC SQL;       
CREATE TABLE FRESH_ADDRESS_INVALID_EMAILS AS          
SELECT A.*,           
CASE 
     WHEN EMAIL_ID IN (SELECT EMAIL_ID FROM SAVEDSAS.FRESH_ADDRESS_INVALID_EMAILS) THEN 'Y'
     ELSE 'N'
     END AS FRESH_ADDRESS_INVALID_FLG 
FROM STACKED4B A;
QUIT;


DATA STACKED4_FINAL;
SET FRESH_ADDRESS_INVALID_EMAILS;
RUN;

DATA CET_&CAMPAIGN_KEY.;
SET STACKED4_FINAL;
IF ADDRESS_LINE_1=' ' AND ADDRESS_LINE_2=' ' THEN DELIVERY_CHECK1 = 'BAD';
ELSE IF CITY_NAME = ' ' THEN DELIVERY_CHECK1='BAD';
ELSE DELIVERY_CHECK1 = 'OK ';
/*ADDED JUNE2023*/
IF DELIVERABILITY_CD ='' THEN DELIVERY_CHECK3='BAD';
ELSE DELIVERY_CHECK3 = 'OK ';
IF ACCT_ACT_MO >=3 AND (CUR_BAL_ACTUAL>A_TD_ME_NET_VOL_AM) THEN
		BAL_GRLOAN_CHECK='BAD';
	ELSE BAL_GRLOAN_CHECK='OK ';
IF CUST_TYP_CD NOT IN ('PC') THEN CUST_TYP_CD_CHK = 'FAILED - CUST_TYP_CD '; 
ELSE CUST_TYP_CD_CHK = 'PASSED';
IF RAP_DESCRIPTION NE ('OCT 2024 PC CARD Email OMF') THEN RAP_DESC_CHK = 'FAILED - RAP_DESCRIPTION';
ELSE RAP_DESC_CHK = 'PASSED'; 
IF CAMPAIGN_TYP NOT IN ('CSTEM') THEN CAMPAIGN_TYP_CHK = 'FAILED - CAMPAIGN_TYP '; 
ELSE CAMPAIGN_TYP_CHK = 'PASSED';

IF INDIV_ID IN (
1001199519874,
1000634493238,
1000337723597,
1000897472252,
1000286778098,
1000313633161,
1000337613174,
1000435778763,
1000338705324,
1000845991341,
1000694241857,
1000729697961,
1000292185426,
1000588828179,
1000289370395,
1000637789385,
1000608702504,
1000375808090,
1000230546767,
1000330523426,
1000273121821,
1000715432603,
1000574838300,
1000457981852,
1000684477257,
1000376294655,
1001193434405,
1000383702167,
1000398396807,
1000346171217,
1000340223985,
1000038782336,
1000228614693,
1000386988958,
1000457818731,
1000722745401,
1000295134412,
1000851973462,
1001029876854,
1000477715049,
1001197275019,
1000281062924,
1000385847628,
1000051740714,
1000539034084,
1000384429142,
1000281282307,
1001116294749,
1001280535724,
1000701081698,
1000929345401,
1001325748309,
1000746772199,
1000290237743,
1001332760384,
1001231896491,
1000455050622,
1000434632500,
1000337227088,
1000318274457, 
1000337227088,
1000289033532,
1001288649436)

or 
ADDRESS_ID IN(4000876177199,
4001003350371,4000904044110,4000867056258,4000901330276,
4000871896568,4000889782835,4000898766575,4000884316663,
4000865713102,5000062005579,4000918219012,4000993290720,
4000918811853,4000870473198,4000884424359,4000918006938,
4001002276478,5000073152423,4000845297959,959783283,
4000939205416,4000855276340,4000868203190,4000887484567,
5000100502503,4000933661777,4000971945280,4000930011186,
4000908274041,4000924722056,5000109357130,4000949654169,
4000950224518,4001031462491,4000876177199,4000870281357,
4000867600603,4000901977815,4000931351555,4000863730880,
4000863730880,4000863730880,5000090682449,4000923667812,
984531662,4000867951341,4000890898405,4000911241087,5000118890376)
 THEN	DNS_CHECK = 'BAD';
	ELSE DNS_CHECK = 'OK ';

/*DEADWOOD*/

/*GMAIL DOMAINS*/
IF (SUBSTR(EML_DOMAIN_TXT,1,5) IN ('GMAIL') OR SUBSTR(EML_DOMAIN_TXT,1,7) IN ('HOTMAIL') OR
SUBSTR(EML_DOMAIN_TXT,1,3) IN ('MSN') OR SUBSTR(EML_DOMAIN_TXT,1,4) IN ('LIVE') OR SUBSTR(EML_DOMAIN_TXT,1,7) IN ('OUTLOOK')
OR SUBSTR(EML_DOMAIN_TXT,1,7) IN ('COMCAST') OR SUBSTR(EML_DOMAIN_TXT,1,6) IN ('ICLOUD') OR SUBSTR(EML_DOMAIN_TXT,1,3) IN ('ME.')) THEN GMAIL_DOMAIN = 'Y';
ELSE GMAIL_DOMAIN = 'N';

/*YAHOO DOMAINS*/
IF (SUBSTR(EML_DOMAIN_TXT,1,5) IN ('YAHOO') OR SUBSTR(EML_DOMAIN_TXT,1,3) IN ('AOL') OR SUBSTR(EML_DOMAIN_TXT,1,5) IN ('YMAIL') OR
SUBSTR(EML_DOMAIN_TXT,1,3) IN ('ATT') OR SUBSTR(EML_DOMAIN_TXT,1,9) IN ('SBCGLOBAL') OR SUBSTR(EML_DOMAIN_TXT,1,9) IN ('BELLSOUTH') OR
SUBSTR(EML_DOMAIN_TXT,1,7) IN ('VERIZON') OR SUBSTR(EML_DOMAIN_TXT,1,5) IN ('MYWAY') OR SUBSTR(EML_DOMAIN_TXT,1,9) IN ('BLUELIGHT') OR
SUBSTR(EML_DOMAIN_TXT,1,7) IN ('NETZERO') OR SUBSTR(EML_DOMAIN_TXT,1,12) IN ('UNITEDONLINE') OR SUBSTR(EML_DOMAIN_TXT,1,4) IN ('JUNO') OR
SUBSTR(EML_DOMAIN_TXT,1,11) IN ('MYEMAILNAME') OR SUBSTR(EML_DOMAIN_TXT,1,11) IN ('EXCITE')) 
THEN YAHOO_DOMAIN = 'Y';
ELSE YAHOO_DOMAIN = 'N';

/*ALL DEADWOOD CHECK*/
IF ALL_DEADWOOD_EXCL_EMAIL = 'Y' AND DAYS_SINCE_LOAN > 360 AND (DAYS_SINCE_LAST_APP > 360 OR DAYS_SINCE_LAST_APP = .)
THEN ALL_DEADWOOD_CHECK = 'BAD';
ELSE ALL_DEADWOOD_CHECK = 'OK';

/*GMAIL DEADWOOD CHECK*/
IF GMAIL_DEADWOOD_EXCL_EMAIL = 'Y' AND GMAIL_DOMAIN = 'Y' AND DAYS_SINCE_LOAN > 270 AND (DAYS_SINCE_LAST_APP > 270 OR DAYS_SINCE_LAST_APP = .)
THEN GMAIL_DEADWOOD_CHECK = 'BAD';
ELSE GMAIL_DEADWOOD_CHECK = 'OK';

/*YAHOO DEADWOOD CHECK*/
IF YAHOO_DEADWOOD_EXCL_EMAIL = 'Y' AND YAHOO_DOMAIN = 'Y' AND DAYS_SINCE_LOAN > 180 AND (DAYS_SINCE_LAST_APP > 180 OR DAYS_SINCE_LAST_APP = .)
THEN YAHOO_DEADWOOD_CHECK = 'BAD';
ELSE YAHOO_DEADWOOD_CHECK = 'OK';

/*DEADWOOD FLAGS FOR SEGMENT CHECKS*/
IF ALL_DEADWOOD_EXCL_EMAIL = 'Y' THEN ALL_DOM_DWD_SEG = 'Y'; ELSE ALL_DOM_DWD_SEG = 'N';
IF GMAIL_DEADWOOD_EXCL_EMAIL = 'Y' AND GMAIL_DOMAIN = 'Y' THEN GMAIL_DWD_SEG = 'Y'; ELSE GMAIL_DWD_SEG = 'N';
IF YAHOO_DEADWOOD_EXCL_EMAIL = 'Y' AND YAHOO_DOMAIN = 'Y' THEN YAHOO_DWD_SEG = 'Y'; ELSE YAHOO_DWD_SEG = 'N';
IF OPEN_365_DEADWOOD = 'Y' /*AND LAST_TOUCH_365 = 'Y'*/ THEN DEADWOOD_365_CHECK = 'BAD'; ELSE DEADWOOD_365_CHECK = 'OK';
IF UNSUBDATE = . THEN EXCL_ZETA_UNSUB = 'N';
ELSE EXCL_ZETA_UNSUB = 'Y';
IF EML_DOMAIN_TXT IN ('TURNBULLLAWGROUP.COM', 'FREEDOMDEBTRELIEF.COM', 'SMARTPAYMENTPLAN.COM') THEN
INVALID_DEBT_RELIEF_EMAIL = 'Y';
ELSE INVALID_DEBT_RELIEF_EMAIL = 'N';
RUN;

DATA OUTCK_&CAMPAIGN_KEY.;
SET CET_&CAMPAIGN_KEY.;
FORMAT OUTPUT_CHECK $50.;
IF CAMPAIGN_TYP_CHK NE 'PASSED' THEN OUTPUT_CHECK = 'FAILED - CAMPAIGN_TYP';
ELSE IF CUSTOMER_TYP_ACTUAL NOT IN ('ACL') THEN OUTPUT_CHECK = 'FAILED - CUSTOMER_TYP_ACTUAL';
ELSE IF CUST_TYP_CD_CHK NE 'PASSED' THEN OUTPUT_CHECK = 'FAILED - CUST_TYP_CD';
ELSE IF SECURITY_TYP NOT IN ('US') THEN OUTPUT_CHECK = 'FAILED - SECURITY_CHECK';
ELSE IF PRODUCT NOT IN ('CC')  THEN OUTPUT_CHECK = 'FAILED - PRODUCT_CHECK';
ELSE IF ACQUISITION_TYP NE 'ITA' THEN OUTPUT_CHECK = 'FAILED - ACQUISITION_TYP';/*
ELSE IF TOLL_FREE_NBR NE '999-999-9999' THEN OUTPUT_CHECK = 'FAILED - TOLL_FREE_NBR';*/
ELSE IF ADDRESS_ID = ' ' THEN OUTPUT_CHECK = 'FAILED - MISSING_ADR_ID';
ELSE IF POSTAL_CD = ' ' THEN OUTPUT_CHECK = 'FAILED - MISSING_POSTAL_CD';
ELSE IF INDIV_ID = ' ' THEN OUTPUT_CHECK = 'FAILED - MISSING_INDIV_ID';
ELSE IF ACCT_KEY = ' ' THEN OUTPUT_CHECK = 'FAILED - MISSING_PERM_ID';
ELSE IF CONTACT_URN = ' ' THEN OUTPUT_CHECK = 'FAILED - MISSING_CONTACT_URN'; /*COMMENT OUT DURING TESTING*/
ELSE IF A_TD_CUST_ID = ' ' THEN OUTPUT_CHECK = 'FAILED - MISSING_CUST ID';
ELSE IF PS_LINE NE '0' THEN OUTPUT_CHECK = 'FAILED - PS_LINE';
ELSE IF CAMPAIGN_KEY NOT IN ("&CAMPAIGN_KEY.") THEN OUTPUT_CHECK = 'FAILED - CAMPAIGN_KEY';
ELSE IF MONTH NE 'OCTOBER' THEN OUTPUT_CHECK = 'FAILED - MONTH';
ELSE IF YEAR NE '2024' THEN OUTPUT_CHECK = 'FAILED - YEAR';
ELSE IF RAP_DESC_CHK NE 'PASSED' THEN OUTPUT_CHECK = 'FAILED - RAP_DESCRIPTION';
ELSE IF STATE_CT_CHECK = 'FAILED' THEN OUTPUT_CHECK = 'FAILED - MISSING_STATES';
ELSE IF DNS_CHECK = 'BAD' THEN OUTPUT_CHECK = 'FAILED - DNS_CHECK'; 
ELSE IF MISC3_TXT NE 'PROMO' THEN OUTPUT_CHECK = 'FAILED - MISC3_TXT'; /*COMMENT OUT DURING TESTING*/
ELSE OUTPUT_CHECK = 'PASSED';
IF BRNCH_NBR*1 = BRANCH_CORP_NBR*1 THEN BRANCH_NBR_CHECK = 'OK ';
ELSE BRANCH_NBR_CHECK = 'BAD';
IF BRNCH_NBR_BNF NE BRNCH_NBR THEN	BNF_CHECK = 'BAD';
IF APR = ' ' THEN BNF_CHECK ='BAD';
ELSE BNF_CHECK = 'OK';
IF INDEX(BIF_LVL_00_EMP_NM,'TRM-') THEN BRNCH_MGR_NAME_CHECK = 'BAD';
	ELSE IF INDEX(BIF_LVL_00_EMP_NM,'UA-') THEN BRNCH_MGR_NAME_CHECK = 'BAD';
	ELSE IF BIF_LVL_00_EMP_NM = ' ' THEN BRNCH_MGR_NAME_CHECK = 'BAD';
	ELSE BRNCH_MGR_NAME_CHECK = 'OK';
IF BRNCH_NBR = ' ' OR	
   BIF_ST_ADDR1_TX = ' ' OR
   BIF_ST_CITY_NAME = ' ' OR
   BIF_ST_STATE_CD = ' ' OR
   BIF_ST_POSTAL_CD = ' ' OR
   BIF_PHONE_NBR = ' ' OR
   BIF_BRNCH_NM = ' ' OR
   BIF_LVL_00_EMP_NM = ' ' OR
   BRNCH_MGR_NAME_CHECK = 'BAD'  
THEN MISSING_BIF_DATA = 'Y'; ELSE MISSING_BIF_DATA = 'N';
IF BIF_BRNCH_NO_8 = BRNCH_NBR THEN NEW_LAYOUT_CHECK1 = 'OK '; ELSE NEW_LAYOUT_CHECK1 = 'BAD';
IF LENGTH(BRNCH_NBR) <= 5 THEN CLOSED_BRANCH_CHK = 'BAD'; ELSE CLOSED_BRN_CHK = 'OK '; 
FORMAT BRANCH_CHECK $50.;
IF BRANCH_NBR_CHECK = 'BAD' THEN BRANCH_CHECK = 'FAILED - BRANCH_NBR_CHECK';
ELSE IF BNF_CHECK = 'BAD' THEN BRANCH_CHECK = 'FAILED - BNF_CHECK';
ELSE IF NEW_LAYOUT_CHECK1 = 'BAD' THEN BRANCH_CHECK = 'FAILED - NEW_LAYOUT_CHECK1';
ELSE IF CLOSED_BRANCH_CHK = 'BAD' THEN BRANCH_CHECK = 'FAILED - CLOSED_BRANCH_CHK';
ELSE IF MISSING_BIF_DATA = 'Y' THEN BRANCH_CHECK = 'FAILED = MISSING_BIF_DATA';
ELSE BRANCH_CHECK = 'PASSED';
RUN;

/*/*OFFER_CHECK*/
DATA AMTCK_&CAMPAIGN_KEY.;
SET OUTCK_&CAMPAIGN_KEY.;
IF OFFER_AMT NOT IN ("$0") OR
   OFFER_AMT1 NOT IN (0) OR 
   APR NOT IN ("35.99%") OR
   CHECK_NUMBER NE ' '  OR
   PMT NE ' ' OR
   TERM NE ' ' 
THEN OFFER_CHECKS = 'BAD';
ELSE OFFER_CHECKS = 'OK '; 

FORMAT SEGMENT $3.;
IF INDEX(CELL_KEY,'BWP') THEN SEGMENT='BWP';
ELSE IF INDEX(CELL_KEY,'BWY') THEN SEGMENT='BWY';
ELSE SEGMENT='ERR';
RUN;
DATA CDCK_&CAMPAIGN_KEY.;
SET AMTCK_&CAMPAIGN_KEY.;
IF MATRIX_APR ='35.99%' AND APR = '35.99%' THEN APR_CHECK = 'OK '; 
ELSE APR_CHECK = 'BAD';
RUN;
DATA MTXCK_&CAMPAIGN_KEY.;
SET CDCK_&CAMPAIGN_KEY.;
FORMAT OFFER_MATRIX_CHECK $50.;
IF APR_CHECK = 'BAD' THEN OFFER_MATRIX_CHECK = 'FAILED - APR_CHECK';
/*ELSE IF MONTHLY_RATE_CHECK = 'BAD' THEN OFFER_MATRIX_CHECK = 'FAILED - MONTHLY_RATE_CHECK';
ELSE IF ANNUAL_FEE_CHECK = 'BAD' THEN OFFER_MATRIX_CHECK = 'FAILED - ANNUAL_FEE_CHECK';
ELSE IF CREDIT_LINE_CHECK = 'BAD' THEN OFFER_MATRIX_CHECK = 'FAILED - CREDIT_LINE_CHECK';*/
ELSE OFFER_MATRIX_CHECK = 'PASSED';RUN;
/*/*wave_CHECK*/
DATA WVCK_&CAMPAIGN_KEY.;
SET MTXCK_&CAMPAIGN_KEY.;
IF WAVE = 1 AND 
   MAIL_DATE = '20241017' AND 
   EXPIRATION_DATE = '20241105' 
THEN WAVE_CHECK = 'OK ';
ELSE WAVE_CHECK = 'BAD';

/*/*CREATIVE_CHECK*/

IF (INDEX(CELL_KEY,'BWP 1000200120004119 T1T2A'))
AND LETTER_CD = 'A' AND 
	OFFER_TYP = 'BWP8' AND
PACKAGE_CD = 'P01'	
THEN CREATIVE_CHECK = 'OK ';
ELSE IF (INDEX(CELL_KEY,'BWP 1000200120004119 T1T2B')) AND
	LETTER_CD = 'B' AND 
	OFFER_TYP = 'BWP8' AND
	PACKAGE_CD = 'P02'
THEN CREATIVE_CHECK = 'OK ';
ELSE IF (INDEX(CELL_KEY,'BWY 1000200110003121 T3T4C')) AND
	LETTER_CD = 'C' AND 
	OFFER_TYP = 'BWY8' AND
	PACKAGE_CD = 'P03'
THEN CREATIVE_CHECK = 'OK ';
ELSE IF (INDEX(CELL_KEY,'BWY 1000200110003121 T3T4D')) AND
	LETTER_CD = 'D' AND 
	OFFER_TYP = 'BWY8' AND
	PACKAGE_CD = 'P04'
THEN CREATIVE_CHECK = 'OK ';
ELSE IF (INDEX(CELL_KEY,'BWY 9100100010004001 T3T4 IPQE')) AND
	LETTER_CD = 'E' AND 
	OFFER_TYP = 'BWY8' AND
	PACKAGE_CD = 'P05'
THEN CREATIVE_CHECK = 'OK ';
ELSE IF (INDEX(CELL_KEY,'BWY 9100100010004001 T3T4 IPQF')) AND
	LETTER_CD = 'F' AND 
	OFFER_TYP = 'BWY8' AND
	PACKAGE_CD = 'P06'
THEN CREATIVE_CHECK = 'OK ';
ELSE CREATIVE_CHECK = 'BAD';

FORMAT OFFER_CREATIVE_CHECK $50. ;
IF WAVE_CHECK = 'BAD' THEN OFFER_CREATIVE_CHECK = 'FAILED - WAVE_CHECK'; 
ELSE IF CC_OFFER_CHECK = 'BAD' THEN OFFER_CREATIVE_CHECK = 'FAILED - CC_OFFER_CHECK'; 
ELSE IF CREATIVE_CHECK = 'BAD' THEN OFFER_CREATIVE_CHECK = 'FAILED - CREATIVE_CHECK'; 
ELSE OFFER_CREATIVE_CHECK = 'PASSED'; 


FORMAT OFFER_CREATIVE_CHECK $50. ;
IF WAVE_CHECK = 'BAD' THEN OFFER_CREATIVE_CHECK = 'FAILED - WAVE_CHECK'; 
ELSE IF STANDARD_PRINT_CK = 'BAD' THEN OFFER_CREATIVE_CHECK = 'FAILED - CREATIVE_CHECK'; 
ELSE IF CREATIVE_CHECK = 'BAD' THEN OFFER_CREATIVE_CHECK = 'FAILED - CREATIVE_CHECK'; 
/*ELSE IF SEG_TEST = 'BAD' THEN OFFER_CREATIVE_CHECK = 'FAILED - SEGMENT_TEST';*/ 
ELSE OFFER_CREATIVE_CHECK = 'PASSED'; 
RUN;
DATA BASE_&CAMPAIGN_KEY.;
SET WVCK_&CAMPAIGN_KEY.;
FORMAT BASE_CRITERIA_CHECK $50. ;
IF SOLCT_ACCT_TYP IN ('ACR','FCL','FCR','NC','CO',' ') THEN BASE_CRITERIA_CHECK = 'FAILED - SOLCT_ACCT_TYP';
ELSE IF STATE_PROVINCE_CD NOT IN ('AL','AZ','CA','CO','DE','FL','GA','HI','ID','IL','IN','KS','KY',
'LA','MI','MN','MO','MS','MT','ND','NH','NJ','NM','OH','OK','OR','PA','SC','SD','TN','TX','UT','VA','WA','WV','WY') 
THEN BASE_CRITERIA_CHECK = 'FAILED - OUTSIDE STATE FOOTPRINT';
ELSE IF AUTH_CD_EMAIL = 'KOFAX_OPT_OUT' AND CUR_AUTH_FLG = 'N' THEN BASE_CRITERIA_CHECK = 'FAILED - KOFAX OPTOUT';
ELSE IF CHARGE_OFF_YN = 'Y' OR CHARGE_OFF_YN_ADDR = 'Y' OR 
	EXP_CO_FLG = 'Y' OR EXP_CO_FLG_ADDR = 'Y' OR EQF_CO_FLG = 'Y' OR EQF_CO_FLG_ADDR = 'Y' OR
	TOT_CO_YN = 'Y' OR TOT_CO_YN_ADDR = 'Y' THEN BASE_CRITERIA_CHECK = 'FAILED - OM_CHARGE_OFF_CHECK';
ELSE IF CUST_OPEN_RELN_CT > 0 OR CUST_OPEN_RELN_CT = . THEN BASE_CRITERIA_CHECK = 'FAILED - CUST_OPEN_RELN_CT';
ELSE IF ACCT_SYS_CD = 'M' THEN BASE_CRITERIA_CHECK = 'FAILED - ACCT_SYS_CD';
ELSE IF WILLOW_ACCTS IN ('WILLOW','GREENPOINT') OR BULK_PURCH = 'EQ1BUYBACK' THEN BASE_CRITERIA_CHECK = 'FAILED - PURCHASED_ACCTS';
ELSE IF DECEASED_YN = 'Y' THEN BASE_CRITERIA_CHECK = 'FAILED - DECEASED_YN';
ELSE IF EMPL_IND = 'EMPL' THEN BASE_CRITERIA_CHECK = 'FAILED - EMPL';
ELSE IF PRISON_IND = 'PRISON' OR PRISON_ADDR = 'PRISON' THEN BASE_CRITERIA_CHECK = 'FAILED - PRISON';
ELSE IF TREASURY_ADDR_IND = 'TREASURY_ADDR' OR TREASURY_ADDR_ADDR = 'TREASURY_ADDR' THEN BASE_CRITERIA_CHECK = 'FAILED - TREASURY_ADDR';
ELSE IF AUTH_CD_EMAIL IN ('DNS') OR AUTH_CD_EMAIL IN ('DNS') THEN BASE_CRITERIA_CHECK = 'FAILED DNS AUTH CD';
ELSE IF AUTH_CD in ('DNS_EMAIL') THEN BASE_CRITERIA_CHECK = 'FAILED DNS_EMAIL';
ELSE IF AUTH_CD_EMAIL IN ('DNS_BPOL_NOT_16') OR AUTH_CD_EMAIL IN ('DNS_BPOL_NOT_16') THEN BASE_CRITERIA_CHECK = 'FAILED DNS_BPOL_NOT_16 AUTH CD';
ELSE IF AUTH_CD_EMAIL NOT IN (' ') THEN CAMPAIGN_CHECK = 'FAILED_AUTH_CD_INDIV';
ELSE IF AUTH_CD_EMAIL NOT IN (' ') THEN CAMPAIGN_CHECK = 'FAILED_AUTH_CD_EMAIL';
ELSE IF EXCL_ZETA_UNSUB IN ('Y') THEN CAMPAIGN_CHECK = 'FAILED_EXCL_ZETA_UNSUB';
ELSE IF MKTG_DNS_YN = 'Y' THEN BASE_CRITERIA_CHECK = 'FAILED - MKTG_DNS_YN';
ELSE IF INVALID_NAME_YN = 'Y' THEN BASE_CRITERIA_CHECK = 'FAILED - INVALID_NAME';
ELSE IF DELIVERY_CHECK1 = 'BAD' OR DELIVERY_CHECK3 = 'BAD' THEN BASE_CRITERIA_CHECK = 'FAILED - BLANK ADDR OR CITY';
ELSE IF BANKRUPT_YN = 'Y' THEN BASE_CRITERIA_CHECK = 'FAILED - BANKRUPT_YN';
ELSE IF BK_FILING_YN = 'Y' THEN BASE_CRITERIA_CHECK = 'FAILED - BK_FILING_YN';
ELSE IF FORECLOSURE_YN_IND = 'Y' THEN BASE_CRITERIA_CHECK = 'FAILED - FORECLOSURE_YN';
ELSE IF ADV_RCPT_CD_IND = 'C' THEN BASE_CRITERIA_CHECK = 'FAILED - ADV_RCPT_CD';
/*ELSE IF ACTIVE_SPECTRUM_YN = 'Y' THEN BASE_CRITERIA_CHECK = 'FAILED - ACTIVE_SPECTRUM_YN';*/
ELSE IF PC_FACT_ACT_YN_IND = 'Y' THEN BASE_CRITERIA_CHECK = 'FAILED - PC_FACT_ACT_YN';
ELSE IF DISPUTED_BALANCE_YN = 'Y' THEN BASE_CRITERIA_CHECK = 'FAILED - DISPUTED_BALANCE_YN';
ELSE IF NBR_ACTIVE_ACCT > 1 THEN BASE_CRITERIA_CHECK = 'FAILED - NBR_ACTIVE_ACCT';
ELSE IF CARD_SUPP = 'ACTIVE OMF CREDIT CARD' THEN BASE_CRITERIA_CHECK = 'FAILED - ACTIVE OMF CREDIT CARD';
ELSE IF CARD_SUPP = 'DECLINED OMF CREDIT CARD APP' THEN BASE_CRITERIA_CHECK = 'FAILED - RECENT DECLINED CARD APP';
ELSE IF CARD_SUPP = 'PENDING OMF CREDIT CARD APP' THEN BASE_CRITERIA_CHECK = 'FAILED - PENDING CARD APP';
ELSE IF ATTORNEY_REP_I_IND = 'Y' THEN BASE_CRITERIA_CHECK = 'FAILED - ATTORNEY_REP'; 
ELSE IF CEASE_DESIST_I_IND = 'Y' THEN BASE_CRITERIA_CHECK = 'FAILED - CEASE_DESIST';
ELSE IF JUDGMENT_LITIGATION_YN_IND = 'Y' THEN BASE_CRITERIA_CHECK = 'FAILED - JUDGMENT_LITIGATION_YN';
ELSE IF JUDGEMENT_YN_IND = 'Y' THEN BASE_CRITERIA_CHECK = 'FAILED - JUDGEMENT_YN';
ELSE IF ACTIVE_COMPLAINT_YN = 'Y' THEN BASE_CRITERIA_CHECK = 'FAILED - ACTIVE_COMPLAINT_YN';
ELSE IF BAL_GRLOAN_CHECK='BAD' THEN BASE_CRITERIA_CHECK = 'FAILED - BAL_GRLOAN_CHECK';
ELSE IF LOAN_MOD_FLAG_IND = 'Y' THEN BASE_CRITERIA_CHECK = 'FAILED - LOAN_MOD';
ELSE IF SDA_FLAG_IND = 'Y' THEN BASE_CRITERIA_CHECK = 'FAILED - SDA_FLAG';
ELSE IF EXCL_ADD_LOAN_MOD_FLAG = 'Y' THEN BASE_CRITERIA_CHECK = 'FAILED - EXCL_ADD_LOAN_MOD';
ELSE IF LOAN_MOD_ACTIVE_FLAG = 'Y' THEN BASE_CRITERIA_CHECK = 'FAILED - LOAN_MOD_ACTIVE';
ELSE IF BA_FLAG = 'Y' THEN BASE_CRITERIA_CHECK = 'FAILED - BORROWER_ASSIST';
ELSE IF CCCS_YN = 'Y' THEN BASE_CRITERIA_CHECK = 'FAILED - CCCS_YN';
ELSE IF ONUS_ALERT_YN = 'Y' THEN BASE_CRITERIA_CHECK = 'FAILED - ONUS_ALERT_YN';
ELSE IF ALERT_ATTRIBUTE_YN = 'Y' THEN BASE_CRITERIA_CHECK = 'FAILED - ALERT_ATTRIBUTE_YN';
ELSE IF DEALERTRK_FLG = 'Y' THEN BASE_CRITERIA_CHECK = 'FAILED - DEALTERTRACK';
ELSE IF DELIVERABILITY_YN ='N' THEN BASE_CRITERIA_CHECK = 'FAILED - DELIVERABILITY_YN';
ELSE IF VALID_EMAIL_FLG NOT IN ('Y') THEN BASE_CRITERIA_CHECK = 'FAILED_VALID_EMAIL_FLG'; 
ELSE IF VALIDSTATUS_ZETA IN ('0') THEN BASE_CRITERIA_CHECK = 'FAILED_VALIDSTATUS_ZETA';
ELSE IF FRESH_ADDRESS_INVALID_FLG IN ('Y') THEN BASE_CRITERIA_CHECK = 'FAILED_FRESH_ADDRESS_INVALID';
ELSE IF INVALID_DEBT_RELIEF_EMAIL IN ('Y') THEN BASE_CRITERIA_CHECK = 'FAILED_DEBT_RELIEF_INVALID';
ELSE IF DNS_IND = 'DNS' THEN BASE_CRITERIA_CHECK = 'FAILED - DNS';
ELSE IF wisconsin_128_i='Y' THEN BASE_CRITERIA_CHECK = 'FAILED - wisconsin_128';
ELSE IF DSA_FLAG='Y' THEN BASE_CRITERIA_CHECK = 'FAILED - DSA';
/*ELSE IF PMT_FLAG = 'Y' THEN BASE_CRITERIA_CHECK = 'FAILED - 6_MO_PMT';*/
ELSE IF DNS_BPOL_NOT_16_IND = 'DNS_BPOL_NOT_16' THEN BASE_CRITERIA_CHECK = 'FAILED - DNS_BPOL_NOT_16';
/*ELSE IF OM_DNM_IND = 'OM_DNM' THEN BASE_CRITERIA_CHECK = 'FAILED - OM_DNM';
*/ELSE BASE_CRITERIA_CHECK = 'PASSED';
RUN; 


/*PC_CCEM STATE CRITERIA CHECKS updated 06/23*/
DATA CET_&CAMPAIGN_KEY._2;
SET BASE_&CAMPAIGN_KEY.;
FORMAT LOAN_CRITERIA_CHECK $50. ; 
IF CELL_KEY IN ('BWP' , 'BWY') THEN DO;
IF STATE_PROVINCE_CD IN ('NY') AND BIF_ST_STATE_CD IN ('NJ') THEN CROSS_BORDER_CHECK = 'BAD';
ELSE IF STATE_PROVINCE_CD IN ('AR') AND BIF_ST_STATE_CD IN ('MO') THEN CROSS_BORDER_CHECK = 'BAD';
ELSE IF STATE_PROVINCE_CD IN ('SC') AND BIF_ST_STATE_CD IN ('NC') THEN CROSS_BORDER_CHECK = 'BAD';
ELSE IF STATE_PROVINCE_CD IN ('VA') AND BIF_ST_STATE_CD IN ('NC') THEN CROSS_BORDER_CHECK = 'BAD';
ELSE IF STATE_PROVINCE_CD IN ('ME') AND BIF_ST_STATE_CD IN ('NH') THEN CROSS_BORDER_CHECK = 'BAD';
ELSE IF STATE_PROVINCE_CD IN ('AR') AND BIF_ST_STATE_CD IN ('OK') THEN CROSS_BORDER_CHECK = 'BAD';
ELSE IF STATE_PROVINCE_CD IN ('MD') AND BIF_ST_STATE_CD IN ('PA') THEN CROSS_BORDER_CHECK = 'BAD';
ELSE IF STATE_PROVINCE_CD IN ('NY') AND BIF_ST_STATE_CD IN ('PA') THEN CROSS_BORDER_CHECK = 'BAD';
ELSE IF STATE_PROVINCE_CD IN ('AR') AND BIF_ST_STATE_CD IN ('TX') THEN CROSS_BORDER_CHECK = 'BAD';
ELSE IF STATE_PROVINCE_CD IN ('KY') AND BIF_ST_STATE_CD IN ('TN') THEN CROSS_BORDER_CHECK = 'BAD'; 
ELSE IF STATE_PROVINCE_CD IN ('KY') AND BIF_ST_STATE_CD IN ('IN') THEN CROSS_BORDER_CHECK = 'BAD'; 
ELSE IF STATE_PROVINCE_CD IN ('ID') AND BIF_ST_STATE_CD IN ('WA') AND BRNCH_NBR NOT IN ('47000833') THEN CROSS_BORDER_CHECK = 'BAD'; 
ELSE IF STATE_PROVINCE_CD IN ('WA') AND BIF_ST_STATE_CD IN ('ID') AND BRNCH_NBR NOT IN ('12800108','12800119','37800268') THEN CROSS_BORDER_CHECK = 'BAD'; 
ELSE IF PC_BIF_ST_STATE_CD NOT IN ('AL','AZ','CA','CO','DE','FL','GA','HI','ID','IL','IN','KS','KY',
'LA','MI','MN','MO','MS','MT','ND','NH','NJ','NM','OH','OK','OR','PA','SC','SD','TN','TX','UT','VA','WA','WV','WY')THEN CROSS_BORDER_CHECK = 'BAD';
ELSE IF STATE_CD = '' THEN CROSS_BORDER_CHECK = 'BAD';
ELSE IF PC_BIF_ST_STATE_CD ='' THEN CROSS_BORDER_CHECK = 'BAD';
ELSE CROSS_BORDER_CHECK = 'OK ';
IF INDEX(BIF_BRANCH_GRP,'OPERATING') AND BIF_CAT_CD = ' '
          THEN BIF_CAT_CD_CHECK = 'OK ';
ELSE IF BIF_BRANCH_GRP = 'ALL OTHER' AND BIF_CAT_CD IN ('RCC','NCC')
          THEN BIF_CAT_CD_CHECK = 'OK ';
     ELSE BIF_CAT_CD_CHECK = 'BAD';
IF NBR_ACTIVE_ACCT=2 THEN CREATIVE_SECURED=1;
	ELSE CREATIVE_SECURED = 0;

IF CREATIVE_SECURED=1 AND CB_MLA_ELG_CD='Y' THEN MLA_SECURED_CHECK='BAD';
	ELSE MLA_SECURED_CHECK='OK ';
END;RUN;

DATA SAVEDSAS.CET_&CAMPAIGN_KEY.;
SET CET_&CAMPAIGN_KEY._2; 
RUN; 



/* SHOULD ALL MATCH TO UNDERWRITING FILE */ 
PROC SQL;	
	CREATE TABLE BWP AS 
(SELECT ACCT_KEY AS BWP_KEY1 
FROM SAVEDSAS.PCPQ_CC_FINAL_BWP_&CC_UNDERWRITING_FILE_DT.
	WHERE ACCT_KEY IS NOT NULL ); 
QUIT; 
PROC SQL;	
	CREATE TABLE BWY AS 
(SELECT ACCT_KEY AS BWY_KEY2 
FROM SAVEDSAS.PCPQ_CC_FINAL_BWY_&CC_UNDERWRITING_FILE_DT. 
	WHERE ACCT_KEY IS NOT NULL ); 
QUIT; 
PROC SQL;	
	CREATE TABLE CC_MATCH AS 
(SELECT A.ACCT_KEY ,A.indiv_id,A.CELL_KEY,a.offer_typ,a.contact_urn, B.BWP_KEY1 ,
C.BWY_KEY2 
FROM SAVEDSAS.CET_&CAMPAIGN_KEY. A
	LEFT JOIN BWP B
	ON A.ACCT_KEY = B.BWP_KEY1
LEFT OUTER JOIN BWY C
ON A.ACCT_KEY = C.BWY_KEY2 
); 
QUIT; 
 PROC SORT DATA=CC_MATCH;BY offer_typ;RUN;
PROC FREQ DATA=CC_MATCH; TABLE CELL_KEY * OFFER_TYP/ NOROW NOPERCENT NOCOL ;RUN;

TITLE '';
TITLE 'CCEM MATCH TO DM ACCT KEY';

PROC SQL;
CREATE TABLE CC_DM_MT AS
SELECT 
A.ACCT_KEY,
a.Indiv_id,
A.CELL_KEY,
a.contact_urn,
a.offer_typ,
a.bwp_key1,
a.BWY_KEY2,
B.ACCT_KEY AS dm_KEY1,
B.SEGMENT_CELL AS CELL_KEY2
	FROM CC_MATCH A
		LEFT JOIN data.LATEST_PCPQCARD_CAMPAIGN B     
			ON A.ACCT_KEY = B.ACCT_KEY
	WHERE A.ACCT_KEY IS NOT NULL ;
QUIT;

PROC FREQ DATA=CC_DM_MT; 
table cell_key *CELL_KEY2/ NOROW NOPERCENT NOCOL;RUN;

/*CCEM MATCH TO UW ACCT KEY*/

PROC SQL;
CREATE TABLE CC_MATCH4  AS          
SELECT A.*,      
CASE 
     WHEN bwp_key1 IN (SELECT acct_key FROM SAVEDSAS.CET_&CAMPAIGN_KEY.) THEN 'bwp'
     ELSE 'bwy'
     END AS CK_MATCH4 
FROM CC_MATCH A;
QUIT; 
PROC FREQ DATA =CC_MATCH4; 
TABLE CELL_KEY *CK_MATCH4  / NOROW NOCOL NOPERCENT MISSING; 
RUN;

PROC SQL;
CREATE TABLE bwy_MATCH  AS          
SELECT A.*,      
CASE 
     WHEN bwy_key2 IN (SELECT acct_key FROM CC_MATCH4 ) THEN 'bwy'
     ELSE 'bwp'
     END AS CK_MATCH5 
FROM CC_DM_MT A;
QUIT; 
PROC FREQ DATA =bwy_MATCH ; 
TABLE offer_typ * cell_key/ NOROW NOCOL NOPERCENT MISSING; 
RUN;
TITLE''; 
PROC FREQ DATA=SAVEDSAS.CET_&CAMPAIGN_KEY.;
TABLE 
CAMPAIGN_KEY
RAP_DESCRIPTION
/*CONTROL*/
DISTINCT_CHECK
STATE_CT_CHECK
BASE_CRITERIA_CHECK
/*LOAN_CRITERIA_CHECK*/
OUTPUT_CHECK
BRANCH_CHECK
OFFER_MATRIX_CHECK
OFFER_CREATIVE_CHECK
MONTH
YEAR
CELL_KEY *LETTER_CD 
OFFER_typ *SEGMENT
STATE_PROVINCE_CD 
BIF_BRANCH_GRP
CAMPAIGN_TYP
AUTH_CD
AUTH_CD_EMAIL
/ NOROW NOCOL NOPERCENT; 
TITLE 'CCEM Frequencies';
RUN;
TITLE''; 

PROC FREQ DATA = SAVEDSAS.CET_&CAMPAIGN_KEY.;
TABLE 
cell_key* Unica_var4 / LIST NOROW NOPERCENT MISSING FORMAT=COMMA24.;
TITLE 'MAIL FREQUENCIES';
RUN;
PROC FREQ DATA = SAVEDSAS.CET_&CAMPAIGN_KEY.;
TABLE 
cell_key* Unica_var5 / LIST NOROW NOPERCENT MISSING FORMAT=COMMA24.;
TITLE 'MAIL FREQUENCIES';
RUN;

PROC FREQ DATA = SAVEDSAS.CET_&CAMPAIGN_KEY.;
TABLE 
cell_key* offer_list_url / LIST NOROW NOPERCENT MISSING FORMAT=COMMA24.;
TITLE 'MAIL FREQUENCIES';
RUN;
TITLE''; 

PROC FREQ DATA=SAVEDSAS.CET_&CAMPAIGN_KEY.; TABLE OFFER_TYP CUST_TYP_CD PRODUCT PMT TERM OFFER_AMT /*OFFER_AMT1*/ 
SECURITY_TYP ACQUISITION_TYP;
RUN; 

proc freq data= SAVEDSAS.CET_&CAMPAIGN_KEY.;
table BRNCH_NBR * BIF_ST_STATE_CD/LIST NOROW NOCOL NOPERCENT MISSING ;
run;/*
PROC FREQ DATA=SAVEDSAS.CET_&CAMPAIGN_KEY.;
TABLE MATRIX_CHECK;RUN;*/

PROC FREQ DATA=SAVEDSAS.CET_&CAMPAIGN_KEY.;
TABLE OFFER_AMT
APR*MATRIX_APR
PMT
TERM
/ LIST NOROW NOCOL NOPERCENT MISSING FORMAT=COMMA24.;
RUN;

/*PASTE THIS FREQUENCY NEXT TO THE AUTH_CD CHECK IN THE FREQS TAB AND LABEL IT AS AUTH_CD PULL - INDIV*/
PROC FREQ DATA = AUTHORIZATION_IND; 
TABLE AUTH_CD / NOROW NOCOL NOPERCENT MISSING;
RUN;


/*PASTE THIS FREQUENCY NEXT TO THE AUTH_CD CHECK IN THE FREQS TAB AND LABEL IT AS AUTH_CD PULL - EMAIL*/
PROC FREQ DATA = AUTHORIZATION_EMAIL; 
TABLE AUTH_CD_EMAIL / NOROW NOCOL NOPERCENT MISSING;
RUN;

/*PASTE THIS FREQUENCY IN THE Eauth_Cd Initial Pull TAB*/
PROC FREQ DATA = EMAIL_AUTHORIZATION; 
TABLE EAUTH_CD / NOROW NOCOL NOPERCENT MISSING; 
RUN;
PROC SQL;
CREATE TABLE CCEM_CELL_KEY_DICTIONARY AS
SELECT
CAMPAIGN_KEY,
PACKAGE_CD,
LETTER_CD,
CELL_KEY,
WAVE,
COUNT(CONTACT_URN) AS NBR_RECS
FROM SAVEDSAS.CET_&CAMPAIGN_KEY. AS A
GROUP BY 
CAMPAIGN_KEY,
PACKAGE_CD,
LETTER_CD,
CELL_KEY,
WAVE;
QUIT; 
/*RECORDS TO DROP*/


DATA SAVEDSAS.&CAMPAIGN_KEY.DROP_RECORDS (KEEP= CONTACT_URN INDIV_ID);
SET SAVEDSAS.CET_&CAMPAIGN_KEY.  ;
IF BASE_CRITERIA_CHECK IN ('FAILED - BK_FILING_YN','FAILED DNS AUTH CD')
THEN OUTPUT;RUN;

PROC SORT DATA = SAVEDSAS.&CAMPAIGN_KEY.DROP_RECORDS NODUPKEY;
BY CONTACT_URN;
RUN;

PROC SQL;		
CREATE TABLE CET_&CAMPAIGN_KEY._FINAL AS		
SELECT A.*,		
CASE	
	WHEN CONTACT_URN IN (SELECT CONTACT_URN FROM SAVEDSAS.&CAMPAIGN_KEY.DROP_RECORDS) THEN 'Y'
	ELSE 'N'
	END AS DROP_FLG	
FROM SAVEDSAS.CET_&CAMPAIGN_KEY. A;
QUIT;

DATA SAVEDSAS.CET_&CAMPAIGN_KEY._FINAL;
SET CET_&CAMPAIGN_KEY._FINAL;
IF DROP_FLG = 'Y' THEN DELETE;
RUN;

PROC FREQ DATA = SAVEDSAS.CET_&CAMPAIGN_KEY._FINAL;
TABLE BASE_CRITERIA_CHECK OUTPUT_CHECK
/ NOROW NOCOL NOPERCENT MISSING;
RUN;
PROC SQL;
CREATE TABLE CCEMDRP_CELL_KEY_DICTIONARY_NEW AS
SELECT
CAMPAIGN_KEY,
PACKAGE_CD,
LETTER_CD,
CELL_KEY,
WAVE,
COUNT(CONTACT_URN) AS NBR_RECS
FROM SAVEDSAS.CET_&CAMPAIGN_KEY._FINAL AS A
GROUP BY 
CAMPAIGN_KEY,
PACKAGE_CD,
LETTER_CD,
CELL_KEY,
WAVE;
QUIT; 

/*SHOULD BE 0 MATCHES*/
PROC SQL;		
CREATE TABLE ZERO_MATCHES AS		
SELECT 		
A.CONTACT_URN,
B.INDIV_ID	
FROM DATA.&CAMPAIGN_KEY._OUTPUT_AUDIT A		
	INNER JOIN SAVEDSAS.&CAMPAIGN_KEYDROP_RECORDS B	
		ON A.CONTACT_URN = B.CONTACT_URN;
QUIT;

/*SHOULD BE A FULL MATCH*/
PROC SQL;		
CREATE TABLE ALL_MATCHES AS		
SELECT 		
A.CONTACT_URN,
B.INDIV_ID,
A.ACCT_KEY,
a.Indiv_id,
A.CELL_KEY,
a.offer_typ	
FROM DATA.&CAMPAIGN_KEY._OUTPUT_AUDIT A		
	INNER JOIN SAVEDSAS.CET_&CAMPAIGN_KEY._FINAL B	
		ON A.CONTACT_URN = B.CONTACT_URN;
QUIT; 
	/* CHECK AGAINST DM FILE FOR MATCH*/
PROC SQL;
CREATE TABLE CC_DM_MT_final AS
SELECT 
A.ACCT_KEY,
a.Indiv_id,
A.CELL_KEY,
a.contact_urn,
a.offer_typ,
B.ACCT_KEY AS acct_KEY1,
B.SEGMENT_CELL AS CELL_KEY2
	FROM ALL_MATCHES A
		LEFT JOIN data.LATEST_PCPQCARD_CAMPAIGN B     
			ON A.ACCT_KEY = B.acct_KEY
	WHERE A.ACCT_KEY IS NOT NULL ;
QUIT;

PROC FREQ DATA = CC_DM_MT_final;;
TABLE CELL_KEY *CELL_KEY2
/ NOROW NOCOL NOPERCENT MISSING;
RUN;

PROC SQL;	
	CREATE TABLE CC_MATCH_Final AS 
(SELECT A.ACCT_KEY ,A.indiv_id,A.CELL_KEY,a.offer_typ,a.contact_urn, B.BWP_KEY1 ,
C.BWY_KEY2 
FROM SAVEDSAS.CET_&CAMPAIGN_KEY._FINAL A
	LEFT JOIN BWP B
	ON A.ACCT_KEY = B.BWP_KEY1
LEFT OUTER JOIN BWY C
ON A.ACCT_KEY = C.BWY_KEY2 ); 
QUIT; 
 PROC SORT DATA=CC_MATCH_Final;BY CELL_KEY ;RUN;
PROC FREQ DATA=CC_MATCH; TABLE CELL_KEY * OFFER_TYP/ NOROW NOPERCENT NOCOL ;RUN;

DATA TEST;
SET SAVEDSAS.CET_&CAMPAIGN_KEY._FINAL;
FORMAT BRANCH_DATA_CHECK $50.;
IF BRNCH_NBR = ' ' THEN BRANCH_DATA_CHECK = '1';
ELSE IF BIF_ST_ADDR1_TX = ' ' THEN BRANCH_DATA_CHECK = '2';
ELSE IF BIF_ST_CITY_NAME = ' ' THEN BRANCH_DATA_CHECK = '3';
ELSE IF BIF_ST_POSTAL_CD = ' ' THEN BRANCH_DATA_CHECK = '4';
ELSE IF BIF_PHONE_NBR = ' ' THEN BRANCH_DATA_CHECK = '5';
ELSE IF BIF_BRNCH_NM = ' ' THEN BRANCH_DATA_CHECK = '6';
ELSE IF BRNCH_MGR_NAME_CHECK = 'BAD' THEN BRANCH_DATA_CHECK = '7';
/*DO_NAME_CHECK ='BAD' OR
DM_NAME_CHECK = 'BAD' OR*/
ELSE IF SUBSTR(BIF_PHONE_NBR,4,1) NE '-' THEN BRANCH_DATA_CHECK = '8';
ELSE IF SUBSTR(BIF_PHONE_NBR,8,1) NE '-' THEN BRANCH_DATA_CHECK = '9';
ELSE IF BIF_ST_STATE_CD = ' ' THEN BRANCH_DATA_CHECK = '10';
ELSE BRANCH_DATA_CHECK = 'OK';
RUN;

PROC FREQ DATA=TEST;
TABLE BRANCH_DATA_CHECK/NOCOL NOROW NOPERCENT MISSING;
RUN;
data check_output;		
         set SAVEDSAS.CET_&CAMPAIGN_KEY.;		
         FORMAT OUTPUT_CHECK $50.;		
         IF CAMPAIGN_TYP_CHK NE 'PASSED' THEN OUTPUT_CHECK = 'FAILED - CAMPAIGN_TYP';		
         ELSE IF CUSTOMER_TYP_ACTUAL NOT IN ('ACL') THEN OUTPUT_CHECK = 'FAILED - CUSTOMER_TYP_ACTUAL';		
         ELSE IF CUST_TYP_CD_CHK NE 'PASSED' THEN OUTPUT_CHECK = 'FAILED - CUST_TYP_CD';		
         ELSE IF SECURITY_TYP NOT IN ('US') THEN OUTPUT_CHECK = 'FAILED - SECURITY_CHECK';		
         ELSE IF ACQUISITION_TYP NE 'ITA' THEN OUTPUT_CHECK = 'FAILED - ACQUISITION_TYP';/*		
         ELSE IF TOLL_FREE_NBR NE '999-999-9999' THEN OUTPUT_CHECK = 'FAILED - TOLL_FREE_NBR';*/		
         ELSE IF ADDRESS_ID = ' ' THEN OUTPUT_CHECK = 'FAILED - MISSING_ADR_ID';		
         ELSE IF INDIV_ID = ' ' THEN OUTPUT_CHECK = 'FAILED - MISSING_INDIV_ID';		
         ELSE IF ACCT_KEY = ' ' THEN OUTPUT_CHECK = 'FAILED - MISSING_PERM_ID';		
         ELSE IF CONTACT_URN = ' ' THEN OUTPUT_CHECK = 'FAILED - MISSING_CONTACT_URN';		
         ELSE IF A_TD_CUST_ID = ' ' THEN OUTPUT_CHECK = 'FAILED - MISSING_CUST ID';		
         ELSE IF PS_LINE NE '0' THEN OUTPUT_CHECK = 'FAILED - PS_LINE';		
         ELSE IF CAMPAIGN_KEY NOT IN ("&CAMPAIGN_KEY.") THEN OUTPUT_CHECK = 'FAILED - CAMPAIGN_KEY';		
         ELSE IF MONTH NE FULL_MONTH THEN OUTPUT_CHECK = 'FAILED - MONTH';		
         ELSE IF YEAR*1 ^= SUBSTR(CAMPAIGN_KEY,5,4)*1 THEN OUTPUT_CHECK = 'FAILED - YEAR';		
         ELSE IF RAP_DESC_CHK NE 'PASSED' THEN OUTPUT_CHECK = 'FAILED - RAP_DESCRIPTION';		
         ELSE IF STATE_CT_CHECK = 'FAILED' THEN OUTPUT_CHECK = 'FAILED - MISSING_STATES';		
         ELSE IF DNS_CHECK = 'BAD' THEN OUTPUT_CHECK = 'FAILED - DNS_CHECK';		
         ELSE IF MISC3_TXT NE 'PROMO' THEN OUTPUT_CHECK = 'FAILED - MISC3_TXT';		
         ELSE OUTPUT_CHECK = 'PASSED';		
         run;		

